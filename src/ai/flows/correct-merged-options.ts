'use server';

/**
 * @fileOverview Corrects merged options in a question generated by the AI.
 *
 * - correctMergedOptions - A function that corrects merged options in a question.
 * - CorrectMergedOptionsInput - The input type for the correctMergedOptions function.
 * - CorrectMergedOptionsOutput - The return type for the correctMergedOptions function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const CorrectMergedOptionsInputSchema = z.object({
  question: z.string().describe('The question to correct.'),
  options: z.array(z.string()).describe('The options for the question.'),
  correctAnswer: z.string().describe('The correct answer for the question.'),
});
export type CorrectMergedOptionsInput = z.infer<
  typeof CorrectMergedOptionsInputSchema
>;

const CorrectMergedOptionsOutputSchema = z.object({
  correctedQuestion: z.string().describe('The corrected question.'),
  correctedOptions: z.array(z.string()).describe('The corrected options.'),
  correctedAnswer: z.string().describe('The corrected answer.'),
});
export type CorrectMergedOptionsOutput = z.infer<
  typeof CorrectMergedOptionsOutputSchema
>;

export async function correctMergedOptions(
  input: CorrectMergedOptionsInput
): Promise<CorrectMergedOptionsOutput> {
  return correctMergedOptionsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'correctMergedOptionsPrompt',
  input: {schema: CorrectMergedOptionsInputSchema},
  output: {schema: CorrectMergedOptionsOutputSchema},
  prompt: `You are an expert at correcting questions with merged options.\n\n  Given the following question, options, and correct answer, correct the question and options so that the options are not merged together.\n\n  Question: {{{question}}}\n  Options: {{#each options}}{{{this}}}\n{{/each}}\n  Correct Answer: {{{correctAnswer}}}\n\n  Make sure that the options are distinct and separate.\n`,
});

const correctMergedOptionsFlow = ai.defineFlow(
  {
    name: 'correctMergedOptionsFlow',
    inputSchema: CorrectMergedOptionsInputSchema,
    outputSchema: CorrectMergedOptionsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
